{# src/Surikat/BookingBundle/Resources/views/Booking/new_booking.html.twig #}

{% extends "SurikatBookingBundle::layout.html.twig" %}

{% block title %}Nouvelle Réservation{% endblock %}

{% block body %}{{ parent() }}

  <h3>Formulaire de Réservation</h3>

  <div class="well">
    {{ form_start(form, {'attr': {'class': 'form-inline'}}) }}

    {# Les erreurs générales du formulaire. #}
    {{ form_errors(form) }}

    {# Génération du label + error + widget pour un champ. #}
    {{ form_row(form.bookedDate) }}

    {# Génération manuelle  #}

    <div class="radio">
      <label>
        <input type="radio" name="type" value="1">Demi Journée
        <span class="cr">
          <i class="cr-icon glyphicon glyphicon-ok-sign"></i>
        </span>
      </label>
      <label>
        <input type="radio" name="type" value="2">Journée
        <span class="cr">
          <i class="cr-icon glyphicon glyphicon-ok-sign"></i>
        </span>
      </label>
    </div>

    {{ form_row(form.tickets) }}
    <a href="#" id="add_ticket" class="btn btn-default">Ajouter un Ticket</a>

    {{ form_widget(form.valider, {'attr': {'class': 'btn btn-primary'}}) }}

    {# Génération automatique des champs pas encore écrits.
       Champ CSRF (géré automatiquement par Symfony !)
       et tous les champs cachés (type « hidden »). #}
    {{ form_rest(form) }}

    {# Fermeture de la balise <form> du formulaire HTML #}

    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

    <script type="text/javascript">
      $(document).ready(function() {
        // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
        var $container = $('div#surikat_bookingbundle_booking_tickets');

        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var index = $container.find(':input').length;

        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
        $('#add_ticket').click(function(e) {
          addTicket($container);

          e.preventDefault(); // évite qu'un # apparaisse dans l'URL
          return false;
        });

        // On ajoute un premier champ automatiquement
        if (index == 0) {
          addTicket($container);
        } else {
          // On ajoute un lien de suppression pour chacun des tickets
          $container.children('div').each(function() {
            addDeleteLink($(this));
          });
        }

        // La fonction qui ajoute un formulaire TicketType
        function addTicket($container) {
          // Dans le contenu de l'attribut « data-prototype », on remplace :
          // - le texte "__name__label__" qu'il contient par le label du champ
          // - le texte "__name__" qu'il contient par le numéro du champ
          var template = $container.attr('data-prototype').replace(/__name__label__/g, 'Ticket n°' + (
            index + 1
          )).replace(/__name__/g, index);

          // On crée un objet jquery qui contient ce template
          var $prototype = $(template);

          // On ajoute au prototype un lien pour pouvoir supprimer le ticket
          addDeleteLink($prototype);

          // On ajoute le prototype modifié à la fin de la balise <div>
          $container.append($prototype);

          // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
          index++;
        }

        // La fonction qui ajoute un lien de suppression d'un ticket
        function addDeleteLink($prototype) {
          // Création du lien
          var $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

          // Ajout du lien
          $prototype.append($deleteLink);

          // Ajout du listener sur le clic du lien pour effectivement supprimer le ticket
          $deleteLink.click(function(e) {
            $prototype.remove();

            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
          });
        }
      });
    </script>

    {{ form_end(form) }}

  </div>

{% endblock %}
